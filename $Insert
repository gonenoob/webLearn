.clone()
可以用来做到复制页面中元素时保留元素不被从老地方一走。.append()等会导致这个问题。

//DOM插入，包裹
.wrap()
在集合中匹配的每个元素周围包裹一个HTML结构.  
.wrap(function)允许我们用函数做参数，改函数返回一个DOM元素，jQuery对象，或者HTML片段，用来包住匹配元素

.wrapAll()
在集合中所有匹配元素的外面包裹一个HTML结构。

.wrapInner()
在匹配元素里的内容外包一层结构。

//DOM插入，内部插入
.append()
在每个匹配元素里面的末尾处插入参数内容。
.append(function(index,html))
index为匹配元素集合的索引位置，html为元素上原来的html内容，this指向元素集合中当前元素。

.appendTo(target)
将匹配的元素插入到目标元素的最后面（内部插入）。

.prepend() .prependTo()
在每个匹配元素之前插入

.html()
获取集合中第一个匹配元素的HTML内容
.html(htmlString)
设置每一个匹配元素的html内容

.text()
得到匹配元素集合中每个元素的合并文本，包括他们的后代
.text(textString)
设置匹配元素集合中每个元素的文本内容为指定的文本内容。

//DOM插入，外部插入
.after() .before() .insertAfter(target) .insertBefore(target)

//DOM移除
.detach()
从DOM中去掉所有匹配的元素.
.detach() 方法和.remove()一样, 除了 .detach()保存所有jQuery数据和被移走的元素相关联。
当需要移走一个元素，不久又将该元素插入DOM时，这种方法很有用。

.empty()
从DOM中移除集合中匹配元素的所有子节点。

.remove()
将匹配元素集合从DOM中删除。（愚人码头注：同时移除元素上的事件及 jQuery 数据。）

.unwrap()
 将匹配元素集合的父级元素删除，保留自身（和兄弟元素，如果存在）在原来的位置。
 
 //DOM替换
 .replaceAll(target)
 用集合的匹配元素替换每个目标元素。
 用来替换的元素从老地方移到新位置，而不是复制。
 
 .replaceWith(newContent)
 用提供的内容替换集合中所有匹配的元素并且返回被删除元素的集合。
 用来替换的元素从老地方移到新位置，而不是复制。
 
 
