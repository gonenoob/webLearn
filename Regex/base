一般我们在写正则的时候是这样的：/pattern/attributes。其中attributes是修饰符，一般有三种：
i:执行对大小写不敏感的匹配。
g:执行全局匹配（查找所有匹配而非在找到第一个匹配后停止）。
m:执行多行匹配。

关键是里面的pattern。首先要先记住三个点，括号：[]，量词和元字符。
括号：[]。一定要和{}口号区别开来，两个括号所表达的意思是完全不一样的。[]代表的是匹配[]之间的所有字符
[137]匹配的是字符137；

[^abc]表示匹配的是除了字符abc以外的字符。

[a-c]表示匹配的是a-c的字符，即a,b,v。

(137|138)查找任何指定的选项,这里指查找137或者138。

元字符：拥有特殊含义的字符。常用的主要有下面几种：

\w:表示查找单词字符。

\d:表示查找数字。

\s:表示查找空白字符。

，正则表达式是对大小敏感的。如果把量词里面的小写字母换成大写字母就会变成匹配不是该字符的字符。例如，\W表示查找非单词字符。

。量词符号如下：

^n:匹配任何开头为 n 的字符串。

n$:匹配任何结尾为 n 的字符串。

n{x}:匹配包含 x 个 n 的序列的字符串。

n{x,y}:匹配包含 x 或 y 个 n 的序列的字符串。

n{x,}:匹配至少包含 x 个 n 的序列的字符串。

n+:匹配任何包含至少一个 n 的字符串。

n?:匹配任何包含零个或一个 n 的字符串。

?=n:匹配任何其后紧接指定字符串 n 的字符串。

?!n:匹配任何其后没有紧接指定字符串 n 的字符串。

这样只要结合量词和元字符或者是括号字符串，或者是三者那么就是一个正则表达式了。下面再举一些实际的例子：

/^[\u4E00-\u9FA5\uf900-\ufa2d\w]{2,16}$/,匹配2-16位的中文姓名。

/^\d{4}-\d{1,2}-\d{1,2}$/,匹配xxxx-xx-xx格式的日期。

/^([a-zA-Z0-9])+@([a-zA-Z0-9])+(\.[a-zA-Z0-9])+/,匹配邮箱。

/^\d{11}$/,匹配11位的数字。

/^\d{5,12}$/,匹配5-12位的数字。
